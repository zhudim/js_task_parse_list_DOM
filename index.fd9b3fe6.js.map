{"mappings":"ACEA,IAAM,EAAY,SAAC,CAAnB,EAGE,OAAO,WAFW,EAAK,YAAY,CAAC,eAAe,OAAO,CAAC,QAAS,IAGtE,EAoCM,EAAO,SAAS,aAAa,CAAC,OAEpC,AApCiB,SAAC,CAAlB,EAA+B,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAQ,OAC/B,EAAQ,MAAM,IAAI,CAAC,EAAY,QAAQ,EAE7C,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAAf,EACE,IAAM,EAAU,EAAU,GACpB,EAAU,EAAU,GAE1B,MAAO,AAAU,SAAV,EAAmB,EAAU,EAAU,EAAU,CAC1D,GAEA,EAAY,SAAS,CAAG,GACxB,EAAM,OAAO,CAAC,SAAC,CAAf,EAAwB,OAAA,EAAY,WAAW,CAAC,E,EAClD,EAwBS,EAAM,QAnBN,AAFO,MAAM,IAAI,CAAC,AAuBV,EAvBsB,QAAQ,EAEhC,GAAG,CAAC,SAAC,CAAlB,EAQE,MAAO,CACL,aARmB,EAAK,WAAW,CAAC,IAAI,GASxC,SARe,EAAK,YAAY,CAAC,iBASjC,OARa,WACb,EAAK,YAAY,CAAC,eAAe,OAAO,CAAC,QAAS,KAQlD,IANU,SAAS,EAAK,YAAY,CAAC,YAAa,GAOpD,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar getSalary = function(item) {\n    var salaryStr = item.getAttribute(\"data-salary\").replace(/[,$]/g, \"\");\n    return parseFloat(salaryStr);\n};\nvar sortList = function(listElement) {\n    var order = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"desc\";\n    var items = Array.from(listElement.children);\n    items.sort(function(a, b) {\n        var salaryA = getSalary(a);\n        var salaryB = getSalary(b);\n        return order === \"desc\" ? salaryB - salaryA : salaryA - salaryB;\n    });\n    listElement.innerHTML = \"\";\n    items.forEach(function(item) {\n        return listElement.appendChild(item);\n    });\n};\nvar getEmployeesData = function(listElement) {\n    var items = Array.from(listElement.children);\n    return items.map(function(item) {\n        var employeeName = item.textContent.trim();\n        var position = item.getAttribute(\"data-position\");\n        var salary = parseFloat(item.getAttribute(\"data-salary\").replace(/[,$]/g, \"\"));\n        var age = parseInt(item.getAttribute(\"data-age\"), 10);\n        return {\n            employeeName: employeeName,\n            position: position,\n            salary: salary,\n            age: age\n        };\n    });\n};\nvar list = document.querySelector(\"ul\");\nsortList(list, \"desc\");\ngetEmployeesData(list);\n\n//# sourceMappingURL=index.fd9b3fe6.js.map\n","'use strict';\n\nconst getSalary = (item) => {\n  const salaryStr = item.getAttribute('data-salary').replace(/[,$]/g, '');\n\n  return parseFloat(salaryStr);\n};\n\nconst sortList = (listElement, order = 'desc') => {\n  const items = Array.from(listElement.children);\n\n  items.sort((a, b) => {\n    const salaryA = getSalary(a);\n    const salaryB = getSalary(b);\n\n    return order === 'desc' ? salaryB - salaryA : salaryA - salaryB;\n  });\n\n  listElement.innerHTML = '';\n  items.forEach((item) => listElement.appendChild(item));\n};\n\nconst getEmployeesData = (listElement) => {\n  const items = Array.from(listElement.children);\n\n  return items.map((item) => {\n    const employeeName = item.textContent.trim();\n    const position = item.getAttribute('data-position');\n    const salary = parseFloat(\n      item.getAttribute('data-salary').replace(/[,$]/g, ''),\n    );\n    const age = parseInt(item.getAttribute('data-age'), 10);\n\n    return {\n      employeeName,\n      position,\n      salary,\n      age,\n    };\n  });\n};\n\nconst list = document.querySelector('ul');\n\nsortList(list, 'desc');\n\ngetEmployeesData(list);\n"],"names":["getSalary","item","parseFloat","getAttribute","replace","list","document","querySelector","sortList","listElement","order","arguments","length","items","Array","from","children","sort","a","b","salaryA","salaryB","innerHTML","forEach","appendChild","map","employeeName","textContent","trim","position","salary","age","parseInt"],"version":3,"file":"index.fd9b3fe6.js.map"}